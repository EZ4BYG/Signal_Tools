% 说明:
% 定义: H = h(t) * 1/(pi・t) h(t)与1/(pi・t)做卷积, 但是这不是普通意义上的卷积操作
% 实际: 离散希尔伯特变换是借助离散傅里叶变换实现的!! matlab自带的函数也是用fft的

clear ; clc ; 

% x = [2 6 8 -1 12 -7 2 3 2 1 8 3 8 0 3 1];
x = [1 5 7 8 11 8 4 1];  % 还是最好用2^n个
N = length(x);

% 先对原离散信号做离散傅里叶变换
X = fft(x);

% 先是一波重新组合:
Z = [];
Z(1) = X(1);
Z(2:N/2) = 2*X(2:N/2);
Z(N/2+1:N) = 0;
% 然后对重组的结果求IDFT即可:
% 希尔伯特的复数部分: 记得去imag
z = imag(ifft(Z))

% 原信号x做hilbert后的结果: hx
hx = x + z*j

% matlab自带的函数计算结果对比:
hx_zd = hilbert(x)

% 希尔伯特不需要反变换: 因为它的实部就是原信号~

